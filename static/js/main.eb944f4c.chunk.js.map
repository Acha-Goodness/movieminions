{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","img/logo1.png","img/logo2.png","ToggleLogo.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","alt","name","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","original_name","overview","ToggleLogo","active","logo1","logo2","Nav","show","handleShow","setActive","interval","setInterval","previousLogo","clearInterval","window","addEventListener","scrollY","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb944f4c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = ( { title, fetchUrl, isLargeRow }) => {\r\n    const [ movies, setMovies ] = useState([]);\r\n    const [ trailerUrl, setTrailerUrl ] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData(); \r\n    }, [fetchUrl]);\r\n\r\n    const opts = {\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n                // https://developers.google.com/youtube/player_parameters\r\n            autoplay:1,\r\n        }\r\n    };\r\n\r\n    const handleClick = (movie) => {\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\");\r\n        }else{\r\n            movieTrailer(movie?.name || \"\")\r\n            .then((url) => {\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get(\"v\"));\r\n            })\r\n            .catch((error) => console.log(error)); \r\n        }\r\n    }\r\n \r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row_posters grey\">\r\n                {movies.map((movie) => (\r\n                    <img src={`${base_url}${movie.poster_path}`} alt={movie.name} key={movie.id} onClick={() => handleClick(movie)} className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}/>\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;","const API_KEY = \"4bb52159c024cca479ea2bc93f658353\";\r\n\r\nconst requests = {\r\n    fetchTrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React, {useState, useEffect} from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\n\r\nconst Banner = () =>{\r\n    const [ movie, setMovie ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n            );\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    console.log(movie);\r\n    function truncate(str, n){\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }\r\n\r\n    return(\r\n        <header className=\"banner\"\r\n            style={{\r\n                backgroundSize:\"cover\",\r\n                backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n                backgroundPosition:\"center center\", \r\n            }}>\r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\"> {movie?.title || movie?.name || movie?.original_name}</h1>\r\n                <div>\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner_description\">{movie?.overview}</h1>\r\n            </div>\r\n            <div className=\"banner--fadeBottom\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner;","export default __webpack_public_path__ + \"static/media/logo1.4330a9ae.png\";","export default __webpack_public_path__ + \"static/media/logo2.4f0efecc.png\";","import React from \"react\";\r\nimport logo1 from \"./img/logo1.png\";\r\nimport logo2 from \"./img/logo2.png\"\r\n\r\nconst ToggleLogo = ({active}) => {\r\n    return (\r\n        <div>\r\n         {active ? \r\n            ( <img src={logo1} alt=\"Logo1\" className=\"nav_logo\"/>) \r\n            : \r\n            (  <img src={logo2} alt=\"Logo2\" className=\"nav_logo\"/>)\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleLogo","import React, {useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\nimport ToggleLogo from \"./ToggleLogo\";\r\n\r\nconst Nav = () => {\r\n    const [show, handleShow ] = useState(false);\r\n    const [ active, setActive ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setActive((previousLogo) => {\r\n                return !previousLogo;\r\n            })\r\n        }, 10000)\r\n        return () => clearInterval(interval)\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if(window.scrollY > 100){\r\n                handleShow(true);\r\n            }else handleShow(false);\r\n        });\r\n        // return () => {\r\n        //     window.removeEventListener(\"scroll\");\r\n        // };\r\n    },[]);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            <ToggleLogo active={active}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\nimport './App.css';\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <Nav/>\n        <Banner/>\n        <Row title=\"ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\n        <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n        <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>  \n        <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n        <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>  \n        <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n        <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>  \n        <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}